/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as HomeRouteImport } from './routes/_home'
import { Route as HomeIndexRouteImport } from './routes/_home/index'
import { Route as HomeDemoTanstackQueryRouteImport } from './routes/_home/demo.tanstack-query'
import { Route as HomeDemoTableRouteImport } from './routes/_home/demo.table'
import { Route as HomeDemoFormSimpleRouteImport } from './routes/_home/demo.form.simple'
import { Route as HomeDemoFormAddressRouteImport } from './routes/_home/demo.form.address'

const HomeRoute = HomeRouteImport.update({
  id: '/_home',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeRoute,
} as any)
const HomeDemoTanstackQueryRoute = HomeDemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => HomeRoute,
} as any)
const HomeDemoTableRoute = HomeDemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => HomeRoute,
} as any)
const HomeDemoFormSimpleRoute = HomeDemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => HomeRoute,
} as any)
const HomeDemoFormAddressRoute = HomeDemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => HomeRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof HomeIndexRoute
  '/demo/table': typeof HomeDemoTableRoute
  '/demo/tanstack-query': typeof HomeDemoTanstackQueryRoute
  '/demo/form/address': typeof HomeDemoFormAddressRoute
  '/demo/form/simple': typeof HomeDemoFormSimpleRoute
}
export interface FileRoutesByTo {
  '/': typeof HomeIndexRoute
  '/demo/table': typeof HomeDemoTableRoute
  '/demo/tanstack-query': typeof HomeDemoTanstackQueryRoute
  '/demo/form/address': typeof HomeDemoFormAddressRoute
  '/demo/form/simple': typeof HomeDemoFormSimpleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_home': typeof HomeRouteWithChildren
  '/_home/': typeof HomeIndexRoute
  '/_home/demo/table': typeof HomeDemoTableRoute
  '/_home/demo/tanstack-query': typeof HomeDemoTanstackQueryRoute
  '/_home/demo/form/address': typeof HomeDemoFormAddressRoute
  '/_home/demo/form/simple': typeof HomeDemoFormSimpleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/demo/form/address'
    | '/demo/form/simple'
  id:
    | '__root__'
    | '/_home'
    | '/_home/'
    | '/_home/demo/table'
    | '/_home/demo/tanstack-query'
    | '/_home/demo/form/address'
    | '/_home/demo/form/simple'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  HomeRoute: typeof HomeRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_home': {
      id: '/_home'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_home/': {
      id: '/_home/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/demo/tanstack-query': {
      id: '/_home/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof HomeDemoTanstackQueryRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/demo/table': {
      id: '/_home/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof HomeDemoTableRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/demo/form/simple': {
      id: '/_home/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof HomeDemoFormSimpleRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/demo/form/address': {
      id: '/_home/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof HomeDemoFormAddressRouteImport
      parentRoute: typeof HomeRoute
    }
  }
}

interface HomeRouteChildren {
  HomeIndexRoute: typeof HomeIndexRoute
  HomeDemoTableRoute: typeof HomeDemoTableRoute
  HomeDemoTanstackQueryRoute: typeof HomeDemoTanstackQueryRoute
  HomeDemoFormAddressRoute: typeof HomeDemoFormAddressRoute
  HomeDemoFormSimpleRoute: typeof HomeDemoFormSimpleRoute
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeIndexRoute: HomeIndexRoute,
  HomeDemoTableRoute: HomeDemoTableRoute,
  HomeDemoTanstackQueryRoute: HomeDemoTanstackQueryRoute,
  HomeDemoFormAddressRoute: HomeDemoFormAddressRoute,
  HomeDemoFormSimpleRoute: HomeDemoFormSimpleRoute,
}

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  HomeRoute: HomeRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
